#!/usr/bin/env bash

###############################################################################
# Formats ipython notebooks with tensorflow-docs nbformat tool.
#
# Usage:
#     dev_tools/nbfmt [--apply]
#
# Without '--apply', the diff that would be applied is printed and the exit
# status is 1 if there are any changes or else 0 if no changes are needed.
#
# With '--apply', the exit status is 0 and the changed files are actually
# reformatted.
#
################################################################################

# Get the working directory to the repo root.
cd "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$(git rev-parse --show-toplevel)"

# Base URL for downloading tools from Cirq.
declare -r cirq=https://raw.githubusercontent.com/quantumlib/Cirq/main

# Check if cirq/check/nbformat exists; if not, grab it.
if [[ ! -f dev_tools/nbformat ]]; then
  wget $cirq/check/nbformat -P dev_tools/
  chmod u+x dev_tools/nbformat
fi

# Check if the tensorflow-docs.txt requirements file exists; if not, grab it.
if [[ ! -f dev_tools/tensorflow-docs.txt ]]; then
  wget $cirq/dev_tools/requirements/deps/tensorflow-docs.txt -P dev_tools/
fi

# Check if the tensorflow-docs package has been installed; if not, install it.
if ! pip show --quiet tensorflow-docs > /dev/null 2>&1; then
  pip install -r dev_tools/tensorflow-docs.txt
fi

# Run the formatter.
result=$(dev_tools/nbformat "$@")
status=$?

# If there is an error message, make sure it references this script.
# Note: using vars here avoids a problem with subsituting strings containing /.
check_path="check/"
devtools_path="dev_tools/"
result=${result//$check_path/$devtools_path}
result=${result//"nbformat"/"nbfmt"}
printf '%s\n' "${result[@]}"
exit $status
